MAX = 500;

hello = "world";
b = 'c';


Foo = struct {
  x : int;
  y : int;
  b : Bar;
}

Bar = struct {
  d : string;
}


function add1(i : int) : int
{
  return i+1;
}

procedure main(s : array of string)
{

  // Declarations
  m : map of (int, string);
  str : string;
  t : bool;
  a : int;
  b : int;
  c : int;
  d : int;
  r : int;
  j : int;
  f : Foo;
  bar : Bar;

  // Basic instructions
  a := 452;
  b := 1;
  t := true;
  c := "rr" + t;

  // Undefined variables
  /* 
  //Detected
  c := u + 1;
  z := 55;
  c := add1(u, v);
  c := add1(u);
  add1(jimmy);
  */

  
  //TODO undetected
  //c := u;
  //c := u.v;
  

  // Hashmap tests
  /*m := {(d, "delta")};
  m := {(a, "alpha"), (b, "beta")};*/

  // Priority tests
  //a := -(2 + (c/2 + a)) * b;

  // Struct tests
  bar := Bar();
  f := Foo();
  f := Foo(a, b, bar);
  f.x := -4;

  // Function calls
  c := add1(a);
  t := add1(a);

  // Input / output
  /*write("Hello ");
  writeln("world");
  str := read();
  writeln("Value: " + str);*/

  // If / else blocks
  /*if (a >= b) {
    c := c + 1;
    if (c < 10)
      write("foo");
  }
  else {
    c := 2;
  }*/

  // For loops
  /*for j in [0 .. c+2] {
    a := b * (2 + j);
    b := b + 10;
  }*/

  // Dowhile loops
  /*repeat {
    c := c - 1;
  } while (c > 0);*/
  writeln("Finished");

}